// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id               String        @id @default(cuid())
  name             String?
  email            String?       @unique
  emailVerified    DateTime?     @map("email_verified")
  image            String?
  password         String?
  accounts         Account[]
  sessions         Session[]
  subscriptionPlan String?       @default("free")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  transactions     Transaction[]
  tags             Tag[]
 
  @@map("users")
}

model Transaction {
  id                String      @id @default(cuid())
  title            String
  amount           Float
  type             String      // "income" | "expense"
  date             DateTime
  category         String
  isRecurring      Boolean     @default(false)
  importance       Int         @default(3)
  description      String?
  recurringFrequency String?   // "weekly" | "monthly" | "quarterly" | "yearly"
  account          String      @default("checking") // AccountType
  userId           String      @map("user_id")
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  tags             Tag[]
 
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("transactions")
}

model Tag {
  id            String        @id @default(cuid())
  name          String
  userId        String        @map("user_id")
  transactions  Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([name, userId])
  @@map("tags")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}
